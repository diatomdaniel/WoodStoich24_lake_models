{"frames":[{"func":"`$<-`(`*tmp*`, model, value = structure(c(1L, 1L, 1L, 1L, 1L, \n1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, \n1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, \n1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"`$<-.tbl_df`(`*tmp*`, model, value = structure(c(1L, 1L, 1L, \n1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, \n1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, \n1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tbl_subassign(x, i = NULL, as_string(name), list(value), i_arg = NULL, \n    j_arg = name, value_arg = substitute(value))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vectbl_recycle_rhs_rows(value, fast_nrow(xo), i_arg = NULL, value_arg, \n    call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(for (j in seq_along(value)) {\n    if (!is.null(value[[j]])) {\n        value[[j]] <- vec_recycle(value[[j]], nrow)\n    } ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_recycle(value[[j]], nrow)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_recycle_incompatible_size(x_size = 7500L, size = 9000L, \n    x_arg = \"\", call = <environment>)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_vctrs(x_size = x_size, y_size = size, x_arg = x_arg, class = c(\"vctrs_error_incompatible_size\", \n    \"vctrs_error_recycle_incompatible_size\"), call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message, class = c(class, \"vctrs_error\"), ..., call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalCondition(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (cnd) \n{\n    abort_assign_incompatible_size(nrow, value, j, i_arg, value_arg, \n        cnd, call = call) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort_assign_incompatible_size(nrow, value, j, i_arg, value_arg, \n    cnd, call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tibble_abort(bullets(paste0(\"Assigned data \", tick(as_label(value_arg)), \n    \" must be compatible with \", target, \":\"), x = existing, \n    x = new, i = if (nrow != 1) \"Only vectors of size 1 are recycled\", \n    i = if (nrow == 1 && vec_size(value[[j]]) != 1) \"Row updates require a list value. Do you need `list()` or `as.list()`?\"),  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(x, class, ..., call = call, parent = parent, use_cli_format = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in `$<-`(`*tmp*`, model, value = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,  : \n  \u001B[38;5;246m\n\u001B[31m✖\u001B[38;5;246m Existing data has 9000 rows.\n\u001B[31m✖\u001B[38;5;246m Assigned data has 7500 rows.\n\u001B[36mℹ\u001B[38;5;246m Only vectors of size 1 are recycled.\u001B[39m\n\u001B[1mCaused by error in `vectbl_recycle_rhs_rows()`:\u001B[22m\n\u001B[33m!\u001B[39m Can't recycle input of size 7500 to size 9000.\n"}