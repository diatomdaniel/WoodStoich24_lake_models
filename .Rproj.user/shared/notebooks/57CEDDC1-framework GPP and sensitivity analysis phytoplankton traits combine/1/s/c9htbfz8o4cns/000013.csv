"0",""
"0","# add stoichiometric ratios"
"0","trait.var.combined$CN_mass <- 1/trait.var.combined$QN1"
"0","trait.var.combined$CP_mass <- 1/trait.var.combined$QP1"
"0","trait.var.combined$NP_mass <- trait.var.combined$QN1/trait.var.combined$QP1"
"0",""
"0","# to molar"
"0","trait.var.combined$CN_molar <- (trait.var.combined$CN_mass * 14.007)/(1*12.011)"
"0","trait.var.combined$CP_molar <- (trait.var.combined$CP_mass * 30.974)/(1*12.011)"
"0","trait.var.combined$NP_molar <- (trait.var.combined$QN1/14.007)/(trait.var.combined$QP1/30.974)"
"0",""
"0","# CN"
"0","trait.var.cn <- trait.var.combined %>%"
"0","  filter(model == ""dynamic"") %>%"
"0","  ggplot() + "
"0","  geom_point(aes(trait.value, log(CN_molar), col = log(Nin/Pin)), size = 2) + "
"0","  ggh4x::facet_grid2(.~trait,  scales = ""free"", independent = ""all"") + "
"0","  scale_color_viridis_c() + "
"0","  labs(x = NULL,"
"0","       y =  ""log cell C:N (molar)"","
"0","       col = ""log inflow N:P (mass)"") + "
"0","  theme(legend.position = ""right"")"
"0",""
"0","# CP"
"0","trait.var.cp <- trait.var.combined %>%"
"0","  filter(model == ""dynamic"") %>%"
"0","  ggplot() + "
"0","  geom_point(aes(trait.value, log(CP_molar), col = log(Nin/Pin)), size = 2) + "
"0","  ggh4x::facet_grid2(.~trait,  scales = ""free"", independent = ""all"") + "
"0","  scale_color_viridis_c() + "
"0","  labs(x = NULL,"
"0","       y =  ""log C:P (molar)"","
"0","       col = ""log inflow N:P (mass)"") + "
"0","  theme(legend.position = ""right"")"
"0",""
"0","# N:P"
"0","trait.var.np <- trait.var.combined %>%"
"0","  filter(model == ""dynamic"") %>%"
"0","  ggplot() + "
"0","  geom_point(aes(trait.value, log(NP_molar), col = log(Nin/Pin)), size = 2) + "
"0","  ggh4x::facet_grid2(.~trait,  scales = ""free"", independent = ""all"") + "
"0","  scale_color_viridis_c() + "
"0","  labs(x = ""Trait value"","
"0","       y =  ""log cell N:P (molar)"","
"0","       col = ""log inflow N:P mass"") + "
"0","  theme(legend.position = ""right"")"
"0",""
"0","# combine"
"0","trait.var.cnp <- ggarrange(plotlist = list(trait.var.cn, trait.var.cp, trait.var.np), "
"0","                           align = ""hv"", nrow = 3, labels = c(""a"", ""b"", ""c""), "
"0","                           common.legend = T, legend = ""bottom"")"
"0","trait.var.cnp"
