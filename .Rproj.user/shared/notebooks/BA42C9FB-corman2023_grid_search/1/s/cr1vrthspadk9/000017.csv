"0","best.run.droop <- lapply(1:nrow(corman2), function(i){"
"0","  # indexing"
"0","    params.droop[""KP1""] = pull(best.parm.droop[1, ""KP1""])"
"0","  params.droop[""KN1""] = pull(best.parm.droop[1, ""KN1""])"
"0","  params.droop[""minQP1""] = pull(best.parm.droop[1, ""minQP1""])"
"0","  params.droop[""minQN1""] = pull(best.parm.droop[1, ""minQN1""])"
"0","  params.droop[""upP1""] = pull(best.parm.droop[1, ""upP1""])"
"0","  params.droop[""upN1""] = pull(best.parm.droop[1, ""upN1""])"
"0","  params.droop[""Pin""] = pull(corman2[i, ""TP_load""])"
"0","  params.droop[""Nin""] = pull(corman2[i, ""TP_load""])"
"0","  # starting values"
"0","  y <- c(""A1"" = 100, ""P"" = corman2[i, ""TP_load""], ""N"" = corman2[i, ""TN_load""],"
"0","          ""QP1"" = 0.015,""QN1"" = 0.1)"
"0","  run <- ode(y, times, parms = params.droop, func = droop.single)"
"0","  return(run[max(times),])"
"0","})"
"2","Error in checkInput(y, times, func, rtol, atol, jacfunc, tcrit, hmin,  : 
  `y' must be numeric
"
