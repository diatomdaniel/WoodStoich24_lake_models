{"frames":[{"func":"lapply(1:nrow(corman2), function(i) {\n    params.droop[\"KP1\"] = pull(best.parm.droop[1, \"KP1\"])\n    params.droop[\"KN1\"] = pull(best.parm.droop[1, \"KN1\"])\n    params.droop[\"minQP1\"] = pull(best.parm.droop[1, \"minQP1\"]) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ode(y, times, parms = params.droop, func = droop.single)","file":"","line_number":14,"end_line_number":14,"character_number":3,"end_character_number":65},{"func":"lsoda(y, times, func, parms, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"checkInput(y, times, func, rtol, atol, jacfunc, tcrit, hmin, \n    hmax, hini, dllname)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(\"`y' must be numeric\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in checkInput(y, times, func, rtol, atol, jacfunc, tcrit, hmin,  : \n  `y' must be numeric\n"}