mod1 <- lmer(zscore_lake_area ~ zscore_gwl + zscore_max_temp + zscore_sum_precip + zscore_cumsum_precip +
(1 | Lake ) + (1 | year), data = merged_data)
summary(mod1)
# model 2, only climate vars
mod2 <- lmer(zscore_lake_area ~ zscore_max_temp + zscore_sum_precip + zscore_cumsum_precip +
(1 | Lake ) + (1 | year), data = merged_data)
summary(mod2)
# model 3, only groundwater vars
mod3 <- lmer(zscore_lake_area ~ zscore_gwl + (1 | Lake ) + (1 | year), data = merged_data)
summary(mod3)
# model comparison
# groundwater doing some heavy lifting here!
MuMIn::model.sel(
mod1 = mod1, mod2 = mod2, mod3 = mod3
)
# bayesian
priors <-  c(set_prior("normal(0, 1)", class = "b"),  set_prior("normal(0, 1)", class = "Intercept"))
# mod1
mod1 <- brm(zscore_lake_area ~ zscore_gwl + zscore_max_temp +  zscore_cumsum_precip + zscore_sum_precip + (1 | Lake ),
sigma ~ year + Lake, data = merged_data, family = student(), prior = priors,
chains = 4, iter = 2000, control = list(adapt_delta = 0.95),
file = "C://Users/DanielGschwentner/Desktop/CLNWR mapping lake area 2022/stan_models/mod1")
summary(mod1)
pp_check(mod1)
bayesplot::mcmc_trace(mod1)
bayes_R2(mod1)
mod1 <- add_criterion(mod1, criterion = c("loo", "bayes_R2"))
# mod2
mod2 <- brm(zscore_lake_area ~ zscore_max_temp +  zscore_cumsum_precip + zscore_sum_precip + (1 | Lake ),
sigma ~ year + Lake, data = merged_data, family = student(), prior = priors,
chains = 4, iter = 2000, control = list(adapt_delta = 0.95),
file = "C://Users/DanielGschwentner/Desktop/CLNWR mapping lake area 2022/stan_models/mod2")
summary(mod2)
pp_check(mod2)
bayesplot::mcmc_trace(mod2)
bayes_R2(mod2)
mod2 <- add_criterion(mod2, criterion = c("loo", "bayes_R2"))
#mod3
mod3 <- brm(zscore_lake_area ~ zscore_gwl + (1 | Lake ),
sigma ~ year + Lake, data = merged_data, family = student(), prior = priors,
chains = 4, iter = 2000, control = list(adapt_delta = 0.95),
file = "C://Users/DanielGschwentner/Desktop/CLNWR mapping lake area 2022/stan_models/mod3")
summary(mod3)
pp_check(mod3)
bayesplot::mcmc_trace(mod3)
bayes_R2(mod3)
mod3 <- add_criterion(mod3, criterion = c("loo", "bayes_R2"))
# compare models
mod.comp <- loo_compare(mod1, mod2, mod3)
print(mod.comp, simplify = F)
round(model_weights(mod1, mod2, mod3, weights = "loo"),5)
###############################################################################
### Create figure of explanatory variables
# legend object.
yr.lg <- c(
"2016" = "grey70",
"2017" = "#ece2f0",
"2018" = "#d0d1e6",
"2019" = "#a6bddb",
"2020" = "#67a9cf",
"2021" = "#3690c0",
"2022" = "#02818a",
"2023" = "#016c59",
"2024" = "#014636"
)
(fig.ave.temp <- clim %>%
ggplot(aes(month, ave_temp, group = year, col = factor(year))) +
geom_path(lwd = 0.75) +
scale_x_continuous(breaks = c(1, 3, 6, 9, 12)) +
scale_color_manual(values = yr.lg) +
labs(x = NULL, y = "Mean monthly temp. C", col = NULL))
(fig.max.temp <- clim %>%
ggplot(aes(month, max_temp, group = year, col = factor(year))) +
geom_path(lwd = 0.75) +
scale_x_continuous(breaks = c(1, 3, 6, 9, 12)) +
scale_color_manual(values = yr.lg) +
labs(x = NULL, y = "Mean max. monthly temp. C", col = NULL))
(fig.nrdays90F <- clim %>%
ggplot(aes(month, nr_days_above90F, group = year, col = factor(year))) +
geom_path(lwd = 0.75) +
scale_x_continuous(breaks = c(1, 3, 6, 9, 12)) +
scale_color_manual(values = yr.lg) +
labs(x = NULL, y = "# Days above 90F", col = NULL))
(fig.total.precip <- clim %>%
ggplot(aes(month, sum_precip, group = year, col = factor(year))) +
geom_path(lwd = 0.75) +
scale_x_continuous(breaks = c(1, 3, 6, 9, 12)) +
scale_color_manual(values = yr.lg) +
labs(x = NULL, y = "Total precip. mm", col = NULL))
(fig.cumsum.precip <- clim %>%
ggplot(aes(month, cumsum_precip, group = year, col = factor(year))) +
geom_path(lwd = 0.75) +
scale_x_continuous(breaks = c(1, 3, 6, 9, 12)) +
scale_color_manual(values = yr.lg) +
labs(x = NULL, y = "Cumulative total precip. mm", col = NULL))
(fig.gwl <- gwl %>%
ggplot(aes(month, gwl_bl_surface_ft, group = year, col = factor(year))) +
geom_hline(yintercept = 0, lty = "dashed") +
geom_path(lwd = 0.75) +
scale_x_continuous(breaks = c(1, 3, 6, 9, 12)) +
scale_color_manual(values = yr.lg) +
labs(x = NULL, y = "Groundwater level below surface ft.", col = NULL))
## arrange into one figure
plt.list <- list(fig.ave.temp, fig.max.temp, fig.nrdays90F,
fig.total.precip, fig.cumsum.precip, fig.gwl)
fig.drivers <- ggpubr::ggarrange(plotlist = plt.list,
nrow = 2, ncol = 3, labels = letters[1:6],
align = "hv", common.legend = T, legend = "bottom")
fig.drivers
save_plot("C://Users/DanielGschwentner/Desktop/CLNWR mapping lake area 2022/lake_area_predictors.png",
fig.drivers, base_width = 12, base_height = 7)
summary(mod1)
summary(mod2)
summary(mod3)
### Drivers of lake surface area in CLNWR
### Surface area estimates from digitized satellite images
### Climate data from Kingsley Dam climate sation, ca. 80 miles S of CLNWR
### Groundwater data from UNL CSD https://snr.unl.edu/data/water/groundwater/realtime/default.aspx
### Groundwater level only goes to 2022 October!!!!!!!!!!!!!!
### Re-run models using Bayesian framework!
### September 2024 DG
## Setup
#load packages
pck <- c("sf", "tidyverse", "cowplot", "ggthemes","ggpubr", "ggsci", "lme4", "brms")
lapply(pck, require, character.only = T)
theme_set(theme_pubr() + theme(legend.position = "bottom"))
### Load data
### Lake data
lake_areas <- st_read(
dsn = "C://Users/DanielGschwentner/Desktop/CLNWR mapping lake area 2022/CLNWR_lake_areas.gpkg",
layer = "Jan2022" # layer name needs to be updated ideally
)
### to df
lake_areas <- st_drop_geometry(lake_areas)
### add date time
lake_areas$Date <- lubridate::ymd(lake_areas$Date)
### Groundwater data
gwl_raw <- read_csv("C://Users/DanielGschwentner/Desktop/CLNWR mapping lake area 2022/GWL_CLNWR_CLEAN.csv")
gwl_raw$DateUTC <- ymd_hms(gwl_raw$DateUTC)
### climate data
clim_raw <- read_csv("C://Users/DanielGschwentner/Desktop/CLNWR mapping lake area 2022/KingsleyDam climate record.csv")
clim_raw$Precipitation <- as.numeric(clim_raw$Precipitation)
clim_raw$Date <- mdy(clim_raw$Date)
clim_raw <- clim_raw[-c(3187:3189),]
################################################################################
### Data cleaning
### Lake area
# create z-scores per lake
lake_areas <- lake_areas %>%
group_by(Lake) %>%
mutate(zscore_lake_area = (area_km2 - mean(area_km2))/sd(area_km2)) %>%
mutate(year = year(Date),
month = month(Date))
### GWL
# monthly averages of groundwater level followed by z-scores
gwl <- gwl_raw %>%
group_by(Year, Month) %>%
summarise(gwl_bl_surface_ft = mean(`Water Level Below Surface Feet`)) %>%
ungroup() %>%
# zscores < -2 (approx.) are when the GW table rose above surface
mutate(zscore_gwl = (gwl_bl_surface_ft - mean(gwl_bl_surface_ft))/sd(gwl_bl_surface_ft)) %>%
filter(Year >= 2016) %>%
rename(year = Year, month = Month)
### Climate data
# conversions to C, mm, days above 90 F, cumulative precip
clim <- clim_raw %>%
mutate(max_temp  =(MaxTemperature - 32) * 5/9,
ave_temp  =(AvgTemperature - 32) * 5/9,
precip = Precipitation * 25.4,
snowfall = Snowfall * 25.4,
sum_precip = precip + snowfall,
year = year(Date),
month = month(Date),
tempabove90F = ifelse(max_temp > 32.22, 1, 0)) %>%
group_by(year, month) %>%
summarize(
# nr of days above 90 F
nr_days_above90F = sum(tempabove90F, na.rm = T),
max_temp = mean(max_temp, na.rm = T),
ave_temp = mean(ave_temp, na.rm = T),
precip = sum(precip, na.rm = T),
snowfall = sum(snowfall, na.rm = T),
sum_precip = sum(sum_precip, na.rm = T)
) %>%
ungroup() %>%
group_by(year) %>%
mutate(cumsum_precip = cumsum(sum_precip)) %>%
ungroup() %>%
# zscores
mutate(
zscore_max_temp = (max_temp - mean(max_temp))/sd(max_temp),
zscore_ave_temp = (ave_temp - mean(ave_temp))/sd(ave_temp),
zscore_sum_precip = (sum_precip - mean(sum_precip))/sd(sum_precip),
zscore_cumsum_precip = (cumsum_precip - mean(cumsum_precip))/sd(cumsum_precip)
)
### Sanity check trends in precip and temperature
# look good to me!
clim %>%
ggplot(aes(month, max_temp, group = year)) + geom_path()
clim %>%
ggplot(aes(month, ave_temp, group = year)) + geom_path()
clim %>%
ggplot(aes(month, nr_days_above90F, group = year)) + geom_path()
clim %>%
ggplot(aes(month, sum_precip, group = year)) + geom_path()
clim %>%
ggplot(aes(month, cumsum_precip, group = year)) + geom_path()
View(clim)
### Climate data
# conversions to C, mm, days above 90 F, cumulative precip
clim <- clim_raw %>%
mutate(max_temp  =(MaxTemperature - 32) * 5/9,
ave_temp  =(AvgTemperature - 32) * 5/9,
precip = Precipitation * 25.4,
snowfall = Snowfall * 25.4,
sum_precip = precip, #+ snowfall,
year = year(Date),
month = month(Date),
tempabove90F = ifelse(max_temp > 32.22, 1, 0)) %>%
group_by(year, month) %>%
summarize(
# nr of days above 90 F
nr_days_above90F = sum(tempabove90F, na.rm = T),
max_temp = mean(max_temp, na.rm = T),
ave_temp = mean(ave_temp, na.rm = T),
precip = sum(precip, na.rm = T),
snowfall = sum(snowfall, na.rm = T),
sum_precip = sum(sum_precip, na.rm = T)
) %>%
ungroup() %>%
group_by(year) %>%
mutate(cumsum_precip = cumsum(sum_precip)) %>%
ungroup() %>%
# zscores
mutate(
zscore_max_temp = (max_temp - mean(max_temp))/sd(max_temp),
zscore_ave_temp = (ave_temp - mean(ave_temp))/sd(ave_temp),
zscore_sum_precip = (sum_precip - mean(sum_precip))/sd(sum_precip),
zscore_cumsum_precip = (cumsum_precip - mean(cumsum_precip))/sd(cumsum_precip)
)
clim %>%
ggplot(aes(month, max_temp, group = year)) + geom_path()
clim %>%
ggplot(aes(month, ave_temp, group = year)) + geom_path()
clim %>%
ggplot(aes(month, nr_days_above90F, group = year)) + geom_path()
clim %>%
ggplot(aes(month, sum_precip, group = year)) + geom_path()
clim %>%
ggplot(aes(month, cumsum_precip, group = year)) + geom_path()
View(clim_raw)
### Climate data
# conversions to C, mm, days above 90 F, cumulative precip
clim <- clim_raw %>%
mutate(max_temp  =(MaxTemperature - 32) * 5/9,
ave_temp  =(AvgTemperature - 32) * 5/9,
precip = Precipitation * 25.4,
snowfall = Snowfall * 25.4,
sum_precip = precip + snowfall,
year = year(Date),
month = month(Date),
tempabove90F = ifelse(max_temp > 32.22, 1, 0)) %>%
group_by(year, month) %>%
summarize(
# nr of days above 90 F
nr_days_above90F = sum(tempabove90F, na.rm = T),
max_temp = mean(max_temp, na.rm = T),
ave_temp = mean(ave_temp, na.rm = T),
precip = mean(precip, na.rm = T),
snowfall = mean(snowfall, na.rm = T),
sum_precip = mean(sum_precip, na.rm = T)
) %>%
ungroup() %>%
group_by(year) %>%
mutate(cumsum_precip = cumsum(sum_precip)) %>%
ungroup() %>%
# zscores
mutate(
zscore_max_temp = (max_temp - mean(max_temp))/sd(max_temp),
zscore_ave_temp = (ave_temp - mean(ave_temp))/sd(ave_temp),
zscore_sum_precip = (sum_precip - mean(sum_precip))/sd(sum_precip),
zscore_cumsum_precip = (cumsum_precip - mean(cumsum_precip))/sd(cumsum_precip)
)
### Sanity check trends in precip and temperature
# look good to me!
clim %>%
ggplot(aes(month, max_temp, group = year)) + geom_path()
clim %>%
ggplot(aes(month, ave_temp, group = year)) + geom_path()
clim %>%
ggplot(aes(month, nr_days_above90F, group = year)) + geom_path()
clim %>%
ggplot(aes(month, sum_precip, group = year)) + geom_path()
clim %>%
ggplot(aes(month, cumsum_precip, group = year)) + geom_path()
clim %>%
ggplot(aes(month, cumsum_precip/25.4, group = year)) + geom_path()
### Climate data
# conversions to C, mm, days above 90 F, cumulative precip
clim <- clim_raw %>%
mutate(max_temp  =(MaxTemperature - 32) * 5/9,
ave_temp  =(AvgTemperature - 32) * 5/9,
precip = Precipitation * 25.4,
snowfall = Snowfall * 25.4,
sum_precip = precip + snowfall,
year = year(Date),
month = month(Date),
tempabove90F = ifelse(max_temp > 32.22, 1, 0)) %>%
group_by(year, month) %>%
summarize(
# nr of days above 90 F
nr_days_above90F = sum(tempabove90F, na.rm = T),
max_temp = mean(max_temp, na.rm = T),
ave_temp = mean(ave_temp, na.rm = T),
precip = sum(precip, na.rm = T),
snowfall = sum(snowfall, na.rm = T),
sum_precip = mean(sum_precip, na.rm = T)
) %>%
ungroup() %>%
group_by(year) %>%
mutate(cumsum_precip = cumsum(sum_precip)) %>%
ungroup() %>%
# zscores
mutate(
zscore_max_temp = (max_temp - mean(max_temp))/sd(max_temp),
zscore_ave_temp = (ave_temp - mean(ave_temp))/sd(ave_temp),
zscore_sum_precip = (sum_precip - mean(sum_precip))/sd(sum_precip),
zscore_cumsum_precip = (cumsum_precip - mean(cumsum_precip))/sd(cumsum_precip)
)
clim %>%
ggplot(aes(month, cumsum_precip, group = year)) + geom_path()
clim %>%
ggplot(aes(month, cumsum_precip/25.4, group = year)) + geom_path()
### Climate data
# conversions to C, mm, days above 90 F, cumulative precip
clim <- clim_raw %>%
mutate(max_temp  =(MaxTemperature - 32) * 5/9,
ave_temp  =(AvgTemperature - 32) * 5/9,
precip = Precipitation * 25.4,
snowfall = Snowfall * 25.4,
sum_precip = precip + snowfall,
year = year(Date),
month = month(Date),
tempabove90F = ifelse(max_temp > 32.22, 1, 0)) %>%
group_by(year, month) %>%
summarize(
# nr of days above 90 F
nr_days_above90F = sum(tempabove90F, na.rm = T),
max_temp = mean(max_temp, na.rm = T),
ave_temp = mean(ave_temp, na.rm = T),
precip = sum(precip, na.rm = T),
snowfall = sum(snowfall, na.rm = T),
sum_precip = sum(sum_precip, na.rm = T)
) %>%
ungroup() %>%
group_by(year) %>%
mutate(cumsum_precip = cumsum(sum_precip)) %>%
ungroup() %>%
# zscores
mutate(
zscore_max_temp = (max_temp - mean(max_temp))/sd(max_temp),
zscore_ave_temp = (ave_temp - mean(ave_temp))/sd(ave_temp),
zscore_sum_precip = (sum_precip - mean(sum_precip))/sd(sum_precip),
zscore_cumsum_precip = (cumsum_precip - mean(cumsum_precip))/sd(cumsum_precip)
)
clim %>%
ggplot(aes(month, cumsum_precip, group = year)) + geom_path()
clim %>%
ggplot(aes(month, cumsum_precip/25.4, group = year)) + geom_path()
### Climate data
# conversions to C, mm, days above 90 F, cumulative precip
clim <- clim_raw %>%
mutate(max_temp  =(MaxTemperature - 32) * 5/9,
ave_temp  =(AvgTemperature - 32) * 5/9,
precip = Precipitation * 25.4,
snowfall = Snowfall * 25.4,
sum_precip = precip, #+ snowfall,
year = year(Date),
month = month(Date),
tempabove90F = ifelse(max_temp > 32.22, 1, 0)) %>%
group_by(year, month) %>%
summarize(
# nr of days above 90 F
nr_days_above90F = sum(tempabove90F, na.rm = T),
max_temp = mean(max_temp, na.rm = T),
ave_temp = mean(ave_temp, na.rm = T),
precip = sum(precip, na.rm = T),
snowfall = sum(snowfall, na.rm = T),
sum_precip = sum(sum_precip, na.rm = T)
) %>%
ungroup() %>%
group_by(year) %>%
mutate(cumsum_precip = cumsum(sum_precip)) %>%
ungroup() %>%
# zscores
mutate(
zscore_max_temp = (max_temp - mean(max_temp))/sd(max_temp),
zscore_ave_temp = (ave_temp - mean(ave_temp))/sd(ave_temp),
zscore_sum_precip = (sum_precip - mean(sum_precip))/sd(sum_precip),
zscore_cumsum_precip = (cumsum_precip - mean(cumsum_precip))/sd(cumsum_precip)
)
clim %>%
ggplot(aes(month, cumsum_precip, group = year)) + geom_path()
clim %>%
ggplot(aes(month, cumsum_precip/25.4, group = year)) + geom_path()
cor(clim[,c(3, 10:13)])
clim_analysis <- clim %>% select(
year, month, zscore_max_temp, zscore_sum_precip, zscore_cumsum_precip
)
merged_data <- lake_areas %>%
merge(.,  gwl, by = c("year", "month"), all.x = T, all.y = F) %>%
drop_na() %>% # gwl only goes to 2022 October!
merge(., clim_analysis, by = c("year", "month"),all.x = T, all.y = F)
# correl between climate and groundwater data
cor(merged_data[,c(6, 8:11)])
### sanity check plots
merged_data %>%
ggplot(aes(zscore_max_temp, zscore_lake_area, col = Lake)) + geom_point()
merged_data %>%
ggplot(aes(zscore_sum_precip, zscore_lake_area, col = Lake)) + geom_point()
merged_data %>%
ggplot(aes(zscore_cumsum_precip, zscore_lake_area, col = Lake)) + geom_point()
merged_data %>%
ggplot(aes(zscore_gwl, zscore_lake_area, col = Lake)) + geom_point()
# model 1, all vars
mod1 <- lmer(zscore_lake_area ~ zscore_gwl + zscore_max_temp + zscore_sum_precip + zscore_cumsum_precip +
(1 | Lake ) + (1 | year), data = merged_data)
summary(mod1)
# model 2, only climate vars
mod2 <- lmer(zscore_lake_area ~ zscore_max_temp + zscore_sum_precip + zscore_cumsum_precip +
(1 | Lake ) + (1 | year), data = merged_data)
summary(mod2)
# model 3, only groundwater vars
mod3 <- lmer(zscore_lake_area ~ zscore_gwl + (1 | Lake ) + (1 | year), data = merged_data)
summary(mod3)
# model comparison
# groundwater doing some heavy lifting here!
MuMIn::model.sel(
mod1 = mod1, mod2 = mod2, mod3 = mod3
)
# bayesian
priors <-  c(set_prior("normal(0, 1)", class = "b"),  set_prior("normal(0, 1)", class = "Intercept"))
# mod1
mod1 <- brm(zscore_lake_area ~ zscore_gwl + zscore_max_temp +  zscore_cumsum_precip + zscore_sum_precip + (1 | Lake ),
sigma ~ year + Lake, data = merged_data, family = student(), prior = priors,
chains = 4, iter = 2000, control = list(adapt_delta = 0.95),
file = "C://Users/DanielGschwentner/Desktop/CLNWR mapping lake area 2022/stan_models/mod1")
summary(mod1)
pp_check(mod1)
bayesplot::mcmc_trace(mod1)
bayes_R2(mod1)
mod1 <- add_criterion(mod1, criterion = c("loo", "bayes_R2"))
# mod2
mod2 <- brm(zscore_lake_area ~ zscore_max_temp +  zscore_cumsum_precip + zscore_sum_precip + (1 | Lake ),
sigma ~ year + Lake, data = merged_data, family = student(), prior = priors,
chains = 4, iter = 2000, control = list(adapt_delta = 0.95),
file = "C://Users/DanielGschwentner/Desktop/CLNWR mapping lake area 2022/stan_models/mod2")
summary(mod2)
pp_check(mod2)
bayesplot::mcmc_trace(mod2)
bayes_R2(mod2)
mod2 <- add_criterion(mod2, criterion = c("loo", "bayes_R2"))
#mod3
mod3 <- brm(zscore_lake_area ~ zscore_gwl + (1 | Lake ),
sigma ~ year + Lake, data = merged_data, family = student(), prior = priors,
chains = 4, iter = 2000, control = list(adapt_delta = 0.95),
file = "C://Users/DanielGschwentner/Desktop/CLNWR mapping lake area 2022/stan_models/mod3")
summary(mod3)
pp_check(mod3)
bayesplot::mcmc_trace(mod3)
bayes_R2(mod3)
mod3 <- add_criterion(mod3, criterion = c("loo", "bayes_R2"))
# compare models
mod.comp <- loo_compare(mod1, mod2, mod3)
print(mod.comp, simplify = F)
round(model_weights(mod1, mod2, mod3, weights = "loo"),5)
rm(list = ls())
setwd("C:/Users/DanielGschwentner/Documents/GitHub/WoodStoich24_lake_models")
###############################################################################
# Setup
#load packages
pck <- c("deSolve", "tidyverse", "cowplot", "ggthemes","ggpubr")
lapply(pck, require, character.only = T)
theme_set(theme_pubr() + theme(legend.position = "bottom"))
# Load algae parameters
source("algae_param_vctrs.R")
# Load models
# static model with fixed stoichiometry
source("models/static_liebig_no_light.R") # model 1 in Carly's framework
# Droop model
source("models/dynamic_liebig_no_light.R") # model 3 in Carly's framework
# set timesteps
times <- 1:2000 # updated to 2k for publication
################################################################################
# Simulations
# Changed sims to correspond to the "linear" segment of phytoplankton stoichiometry from Klausmeier et al 2004 (also reported in Meunier et al 2014: https://journals.plos.org/plosone/article/file?id=10.1371/journal.pone.0107737&type=printable)
# molar N:P = approx 20 to 40/50 = N:P mass of 9 to 20~ish
# set loads
# low, mid, high P supply --> trophic state
loads <- expand.grid(Pin = c(50, 100, 500),
NP_inflow = seq(5, 30, 1))
loads$Nin <- loads$Pin * loads$NP_inflow
# consumption vctr
consump.vctr <- tibble(
model = rep(c("static", "dynamic"), each = 4),
species = rep(c("average", "diatoms", "greens", "cyanos"), 2),
"minQN_minQP" = rep(c(
((0.09/14.007)/(1/12.001))/((0.0105/30.974)/(1/12.001)),
((0.155/14.007)/(1/12.001))/((0.02/30.974)/(1/12.001)),
((0.025/14.007)/(1/12.001))/((0.001/30.974)/(1/12.001)),
((0.01/14.007)/(1/12.001))/((0.001/30.974)/(1/12.001))), 2))
View(consump.vctr)
