params.mich["Pin"] = new.grid[i, "Pin"]
params.mich["Nin"] = new.grid[i, "Nin"]
params.mich["KP1"] = new.grid[i, "KP1"]
params.mich["QP1"] = new.grid[i, "QP1"]
params.mich["KN1"] = new.grid[i, "KN1"]
params.mich["QN1"] = new.grid[i, "QN1"]
y <- c("A1" = 100,
"P" = new.grid[i, "Pin"],
"N" = new.grid[i, "Nin"])
run <- ode(y, times, parms = params.mich, func = mich.single)
return(run[max(times),])
})
mm.grid.analysis <- do.call(rbind, mm.grid.analysis)
mm.grid.analysis <- as_data_frame(mm.grid.analysis)
mm.grid.analysis$Pin <- new.grid$Pin
mm.grid.analysis$Nin <- new.grid$Nin
mm.grid.analysis$NP_inflow <- new.grid$NP_inflow
mm.grid.analysis$KP1 <- new.grid$KP1
mm.grid.analysis$QP1 <- new.grid$QP1
mm.grid.analysis$KN1 <- new.grid$KN1
mm.grid.analysis$QN1 <- new.grid$QN1
# plot
mm.grid.plt.data <- mm.grid.analysis %>%
select(GPP, Pin, NP_inflow, KP1, KN1) %>%
gather("Trait", "Value", -GPP,  -Pin, -NP_inflow)
ggplot() +
geom_point(
data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 5,],
aes(x = Value, y = GPP, fill = Pin), pch = 21, size = 2, col = "white") +
geom_point(
data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 10,],
aes(x = Value, y = GPP, fill = Pin), pch = 22, size = 2, col = "white") +
geom_point(
data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 25,],
aes(x = Value, y = GPP, fill = Pin), pch = 23, size = 2, col = "white") +
geom_point(
data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 50,],
aes(x = Value, y = GPP, fill = Pin), pch = 24, size = 2, col = "white") +
facet_wrap(Trait~., scales = "free_x") +
scale_fill_viridis_c()
# plot
mm.grid.plt.data <- mm.grid.analysis %>%
select(GPP, Pin, NP_inflow, KP1, KN1, QP1, QN1) %>%
gather("Trait", "Value", -GPP,  -Pin, -NP_inflow)
ggplot() +
geom_point(
data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 5,],
aes(x = Value, y = GPP, fill = Pin), pch = 21, size = 2, col = "white") +
geom_point(
data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 10,],
aes(x = Value, y = GPP, fill = Pin), pch = 22, size = 2, col = "white") +
geom_point(
data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 25,],
aes(x = Value, y = GPP, fill = Pin), pch = 23, size = 2, col = "white") +
geom_point(
data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 50,],
aes(x = Value, y = GPP, fill = Pin), pch = 24, size = 2, col = "white") +
facet_wrap(Trait~., scales = "free_x") +
scale_fill_viridis_c()
x <- mm.grid.analysis
# new model grid with inflow and trait parameter data
new.grid <- expand.grid(Pin =  c(20, 50, 100),# seq(5, 100, 25 ) ,
NP_inflow = c(5:10),
KP1 = seq(1, 10, 2), # 1
#QP1 = seq(0.01, 0.1, 0.01), # 0.1
#QP1 = c(0.01, 0.05, 0.1),
QP1 = 0.05,
KN1 = seq(5, 50, 5), # 5
#QN1 = c(0.01, 0.05, 0.1))
QN1 = 0.05)
#QN1 = seq(0.01, 0.1, 0.01)) # 0.1
new.grid$Nin <- new.grid$Pin * new.grid$NP_inflow
# run model
mm.grid.analysis <- lapply(1:nrow(new.grid), function(i) {
params.mich["Pin"] = new.grid[i, "Pin"]
params.mich["Nin"] = new.grid[i, "Nin"]
params.mich["KP1"] = new.grid[i, "KP1"]
params.mich["QP1"] = new.grid[i, "QP1"]
params.mich["KN1"] = new.grid[i, "KN1"]
params.mich["QN1"] = new.grid[i, "QN1"]
y <- c("A1" = 100,
"P" = new.grid[i, "Pin"],
"N" = new.grid[i, "Nin"])
run <- ode(y, times, parms = params.mich, func = mich.single)
return(run[max(times),])
})
# add meta-data
mm.grid.analysis <- do.call(rbind, mm.grid.analysis)
mm.grid.analysis <- as_data_frame(mm.grid.analysis)
mm.grid.analysis$Pin <- new.grid$Pin
mm.grid.analysis$Nin <- new.grid$Nin
mm.grid.analysis$NP_inflow <- new.grid$NP_inflow
mm.grid.analysis$KP1 <- new.grid$KP1
mm.grid.analysis$QP1 <- new.grid$QP1
mm.grid.analysis$KN1 <- new.grid$KN1
mm.grid.analysis$QN1 <- new.grid$QN1
# plot
mm.grid.plt.data <- mm.grid.analysis %>%
select(GPP, Pin, NP_inflow, KP1, KN1, QP1, QN1) %>%
gather("Trait", "Value", -GPP,  -Pin, -NP_inflow)
ggplot() +
geom_point(
data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 5,],
aes(x = Value, y = GPP, fill = Pin), pch = 21, size = 2, col = "white") +
geom_point(
data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 10,],
aes(x = Value, y = GPP, fill = Pin), pch = 22, size = 2, col = "white") +
geom_point(
data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 25,],
aes(x = Value, y = GPP, fill = Pin), pch = 23, size = 2, col = "white") +
geom_point(
data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 50,],
aes(x = Value, y = GPP, fill = Pin), pch = 24, size = 2, col = "white") +
facet_wrap(Trait~., scales = "free_x") +
scale_fill_viridis_c()
ggplot() +
# geom_point(
#   data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 5,],
#   aes(x = Value, y = GPP, fill = Pin), pch = 21, size = 2, col = "white") +
#   geom_point(
#   data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 10,],
#   aes(x = Value, y = GPP, fill = Pin), pch = 22, size = 2, col = "white") +
#   geom_point(
#   data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 25,],
#   aes(x = Value, y = GPP, fill = Pin), pch = 23, size = 2, col = "white") +
#   geom_point(
#   data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 50,],
#   aes(x = Value, y = GPP, fill = Pin), pch = 24, size = 2, col = "white") +
geom_point(data = mm.grid.plt.data, aes(x = Value, y = GPP, col = Pin, alpha = NP_inflow)) +
facet_wrap(Trait~., scales = "free_x") +
scale_fill_viridis_c()
mm.grid.analysis <- x
# plot
mm.grid.plt.data <- mm.grid.analysis %>%
select(GPP, Pin, NP_inflow, KP1, KN1, QP1, QN1) %>%
gather("Trait", "Value", -GPP,  -Pin, -NP_inflow)
ggplot() +
# geom_point(
#   data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 5,],
#   aes(x = Value, y = GPP, fill = Pin), pch = 21, size = 2, col = "white") +
#   geom_point(
#   data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 10,],
#   aes(x = Value, y = GPP, fill = Pin), pch = 22, size = 2, col = "white") +
#   geom_point(
#   data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 25,],
#   aes(x = Value, y = GPP, fill = Pin), pch = 23, size = 2, col = "white") +
#   geom_point(
#   data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 50,],
#   aes(x = Value, y = GPP, fill = Pin), pch = 24, size = 2, col = "white") +
geom_point(data = mm.grid.plt.data, aes(x = Value, y = GPP, col = Pin, alpha = NP_inflow)) +
facet_wrap(Trait~., scales = "free_x") +
scale_fill_viridis_c()
ggplot() +
# geom_point(
#   data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 5,],
#   aes(x = Value, y = GPP, fill = Pin), pch = 21, size = 2, col = "white") +
#   geom_point(
#   data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 10,],
#   aes(x = Value, y = GPP, fill = Pin), pch = 22, size = 2, col = "white") +
#   geom_point(
#   data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 25,],
#   aes(x = Value, y = GPP, fill = Pin), pch = 23, size = 2, col = "white") +
#   geom_point(
#   data = mm.grid.plt.data[mm.grid.plt.data$NP_inflow == 50,],
#   aes(x = Value, y = GPP, fill = Pin), pch = 24, size = 2, col = "white") +
geom_point(data = mm.grid.plt.data, aes(x = Value, y = GPP, col = Pin, alpha = NP_inflow)) +
facet_wrap(Trait~., scales = "free_x") +
scale_fill_viridis_c()
View(mm.grid.analysis)
# plot
mm.grid.plt <- mm.grid.analysis %>%
select(GPP, Pin, NP_inflow, KP1, KN1, QP1, QN1) %>%
gather("Trait", "Value", -GPP,  -Pin, -NP_inflow) %>%
ggplot() +
geom_point(aes(x = Value, y = GPP, col = Pin, alpha = NP_inflow), size = 2) +
facet_wrap(Trait~., scales = "free_x") +
scale_col_viridis_c()
# plot
mm.grid.plt <- mm.grid.analysis %>%
select(GPP, Pin, NP_inflow, KP1, KN1, QP1, QN1) %>%
gather("Trait", "Value", -GPP,  -Pin, -NP_inflow) %>%
ggplot() +
geom_point(aes(x = Value, y = GPP, col = Pin, alpha = NP_inflow), size = 2) +
facet_wrap(Trait~., scales = "free_x") +
scale_color_viridis_c()
mm.grid.plt
mich.menten.1 <- sim.mich %>%
#filter(Pin > 20, Nin > 20) %>%
ggplot(aes(Pin, Nin, fill = log10RR)) +
geom_raster() +
# Redfield
geom_abline(intercept = 0, slope =  c(16*14.007/30.974),
lty = "dashed", col = "white", lwd = 1) +
# Downing and McCauley
geom_abline(intercept = 0, slope  = c(14, 30),
lty = "dashed", col = "black", lwd = 1) +
facet_grid(scenario ~ param) +
scale_fill_viridis_c() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("log"[10] ~ "RR"))
mich.menten.1
mich.menten.1 <- sim.mich %>%
#filter(Pin > 20, Nin > 20) %>%
ggplot(aes(Pin, Nin, fill = log10RR)) +
geom_raster() +
# Redfield
geom_abline(intercept = 0, slope =  c(16*14.007/30.974),
lty = "dashed", col = "white", lwd = 1) +
# Downing and McCauley
geom_abline(intercept = 0, slope  = c(14, 30),
lty = "dashed", col = "black", lwd = 1) +
facet_grid(scenario ~ param, nrow = 2) +
scale_fill_viridis_c() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("log"[10] ~ "RR"))
mich.menten.1
mich.menten.1 <- sim.mich %>%
#filter(Pin > 20, Nin > 20) %>%
ggplot(aes(Pin, Nin, fill = log10RR)) +
geom_raster() +
# Redfield
geom_abline(intercept = 0, slope =  c(16*14.007/30.974),
lty = "dashed", col = "white", lwd = 1) +
# Downing and McCauley
geom_abline(intercept = 0, slope  = c(14, 30),
lty = "dashed", col = "black", lwd = 1) +
facet_grid(scenario ~ param. rows = 2) +
mich.menten.1 <- sim.mich %>%
#filter(Pin > 20, Nin > 20) %>%
ggplot(aes(Pin, Nin, fill = log10RR)) +
geom_raster() +
# Redfield
geom_abline(intercept = 0, slope =  c(16*14.007/30.974),
lty = "dashed", col = "white", lwd = 1) +
# Downing and McCauley
geom_abline(intercept = 0, slope  = c(14, 30),
lty = "dashed", col = "black", lwd = 1) +
facet_grid(scenario ~ param, rows = 2) +
scale_fill_viridis_c() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("log"[10] ~ "RR"))
mich.menten.1
droop.QN <- sim.droop %>%
ggplot(aes(Pin, Nin, fill = log10RR.QN)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_grid(scenario ~ param) +
#scale_fill_viridis_c(option = "H") +
#   scale_fill_viridis_b(breaks = c(
#   -100, -50, 0, 10, 50, 100, 500, 1000
# ), option = "H") +
# scale_x_continuous(breaks = c(10, 250, 500)) +
labs(x = "P in ppm", y = "N in ppm", fill = "% change")
droop.QN
save_plot("figures/sensitivity_analysis_mm.png", mich.menten.1,
base_height = 4, base_width = 9, dpi = 400)
mich.menten.1 <- sim.mich %>%
#filter(Pin > 20, Nin > 20) %>%
ggplot(aes(Pin, Nin, fill = round(log10RR, 1))) +
geom_raster() +
# Redfield
geom_abline(intercept = 0, slope =  c(16*14.007/30.974),
lty = "dashed", col = "white", lwd = 1) +
# Downing and McCauley
geom_abline(intercept = 0, slope  = c(14, 30),
lty = "dashed", col = "black", lwd = 1) +
facet_grid(scenario ~ param) +
scale_fill_viridis_c() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("log"[10] ~ "RR"))
mich.menten.1
mich.menten.1 <- sim.mich %>%
#filter(Pin > 20, Nin > 20) %>%
ggplot(aes(Pin, Nin, fill = round(log10RR, 2))) +
geom_raster() +
# Redfield
geom_abline(intercept = 0, slope =  c(16*14.007/30.974),
lty = "dashed", col = "white", lwd = 1) +
# Downing and McCauley
geom_abline(intercept = 0, slope  = c(14, 30),
lty = "dashed", col = "black", lwd = 1) +
facet_grid(scenario ~ param) +
scale_fill_viridis_c() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("log"[10] ~ "RR"))
mich.menten.1
save_plot("figures/sensitivity_analysis_mm.png", mich.menten.1,
base_height = 4, base_width = 9, dpi = 400)
mich.menten.1 <- sim.mich %>%
#filter(Pin > 20, Nin > 20) %>%
ggplot(aes(Pin, Nin, fill = log10RR)) +
geom_raster() +
# Redfield
geom_abline(intercept = 0, slope =  c(16*14.007/30.974),
lty = "dashed", col = "white", lwd = 1) +
# Downing and McCauley
geom_abline(intercept = 0, slope  = c(14, 30),
lty = "dashed", col = "black", lwd = 1) +
facet_grid(scenario ~ param) +
scale_fill_viridis_c() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("log"[10] ~ "RR"))
mich.menten.1
save_plot("figures/sensitivity_analysis_mm.png", mich.menten.1,
base_height = 4, base_width = 9, dpi = 400)
# plot
mm.grid.plt <- mm.grid.analysis %>%
select(GPP, Pin, NP_inflow, KP1, KN1, QP1, QN1) %>%
gather("Trait", "Value", -GPP,  -Pin, -NP_inflow) %>%
ggplot() +
geom_point(aes(x = Value, y = GPP, col = Pin, alpha = NP_inflow), size = 2) +
facet_wrap(Trait~., scales = "free_x") +
scale_color_viridis_c() +
labs(x = "Trait value", y = expression("GPP mg C L"^-1 ~ "day"^-1),
fill = expression("Inflow P ug L"^-1), alpha = "Inflow N:P")
mm.grid.plt
# plot
mm.grid.plt <- mm.grid.analysis %>%
select(GPP, Pin, NP_inflow, KP1, KN1, QP1, QN1) %>%
gather("Trait", "Value", -GPP,  -Pin, -NP_inflow) %>%
ggplot() +
geom_point(aes(x = Value, y = GPP, col = Pin, alpha = NP_inflow), size = 2) +
facet_wrap(Trait~., scales = "free_x") +
scale_color_viridis_c() +
labs(x = "Trait value", y = expression("GPP mg C L"^-1 ~ "day"^-1),
col = expression("Inflow P ug L"^-1), alpha = "Inflow N:P")
mm.grid.plt
save_plot("figures/grid_analysis_mm.png", mm.grid.plt,
base_height = 6, base_width = 6, dpi = 400)
save_plot("figures/grid_analysis_mm.png", mm.grid.plt,
base_height = 4, base_width = 5, dpi = 400)
# plot
mm.grid.plt <- mm.grid.analysis %>%
select(GPP, Pin, NP_inflow, KP1, KN1, QP1, QN1) %>%
gather("Trait", "Value", -GPP,  -Pin, -NP_inflow) %>%
ggplot() +
geom_point(aes(x = Value, y = GPP, col = Pin, alpha = NP_inflow), size = 2) +
facet_wrap(Trait~., scales = "free_x") +
scale_color_viridis_c() +
labs(x = "Trait value", y = expression("GPP mg C L"^-1 ~ "day"^-1),
col = expression("Inflow P ug L"^-1), alpha = "Inflow N:P") +
theme(legend.position="bottom", legend.box="vertical", legend.margin=margin())
mm.grid.plt
save_plot("figures/grid_analysis_mm.png", mm.grid.plt,
base_height = 4, base_width = 5, dpi = 400)
droop.gpp <- sim.droop %>%
ggplot(aes(Pin, Nin, fill = log10RR.gpp)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_grid(scenario ~ param) +
#scale_fill_viridis_c(option = "H") +
#   scale_fill_viridis_b(breaks = c(
#   -100, -50, 0, 10, 50, 100, 500, 1000
# ), option = "H") +
#scale_x_continuous(breaks = c(10, 250, 500)) +
labs(x = "P in ugL", y = "N in ugL", fill = "log10 RR")
droop.gpp
droop.gpp <- sim.droop %>%
ggplot(aes(Pin, Nin, fill = log10RR.gpp)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_grid(scenario ~ param) +
scale_fill_viridis_c() +
labs(x = "P in ugL", y = "N in ugL", fill = "log10 RR")
droop.gpp
mich.menten.2 <- sim.mich.metrics %>%
ggplot(aes(Pin, Nin, fill = max.change)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_wrap(scenario~.,ncol = 2) +
scale_fill_viridis_d(option = "H") +
scale_x_continuous(breaks = c(10, 250, 500)) +
abs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = "max. change")
mich.menten.2 <- sim.mich.metrics %>%
ggplot(aes(Pin, Nin, fill = max.change)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_wrap(scenario~.,ncol = 2) +
scale_fill_viridis_d(option = "H") +
scale_x_continuous(breaks = c(10, 250, 500)) +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = "max. change")
mich.menten.2
droop.gpp <- sim.droop %>%
ggplot(aes(Pin, Nin, fill = log10RR.gpp)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_grid(scenario ~ param) +
scale_fill_viridis_c() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("log"[10] ~ "RR"))
droop.gpp
droop.QP <- sim.droop %>%
ggplot(aes(Pin, Nin, fill = change2baseline.QP)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_grid(scenario ~ param) +
scale_fill_viridis_c() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("log"[10] ~ "RR"))
droop.QP
droop.QP <- sim.droop %>%
ggplot(aes(Pin, Nin, fill = log10RR.QP)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_grid(scenario ~ param) +
scale_fill_viridis_c() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("log"[10] ~ "RR QP"))
droop.gpp
droop.QP
droop.QP <- sim.droop %>%
ggplot(aes(Pin, Nin, fill = log10RR.QN)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_grid(scenario ~ param) +
scale_fill_viridis_c() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("log"[10] ~ "RR QN"))
droop.QN
droop.QN <- sim.droop %>%
ggplot(aes(Pin, Nin, fill = log10RR.QN)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_grid(scenario ~ param) +
scale_fill_viridis_c() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("log"[10] ~ "RR QN"))
droop.QN
droop.max.gpp <- sim.droop.metrics.gpp %>%
ggplot(aes(Pin, Nin, fill = max.change)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_wrap(scenario~., ncol = 2) +
scale_fill_viridis_d(option = "H") +
scale_x_continuous(breaks = c(10, 250, 500)) +
labs(x = "P in ppm", y = "N in ppm", fill = "max. change")
droop.max.gpp
droop.max.gpp <- sim.droop.metrics.gpp %>%
ggplot(aes(Pin, Nin, fill = max.change)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_wrap(scenario~., ncol = 2) +
scale_fill_viridis_c() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("max. change GPP"))
droop.max.gpp
droop.max.gpp <- sim.droop.metrics.gpp %>%
ggplot(aes(Pin, Nin, fill = max.change)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_wrap(scenario~., ncol = 2) +
scale_fill_viridis_d() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("max. change GPP"))
droop.max.gpp
droop.max.QN <- sim.droop.metrics.qn %>%
ggplot(aes(Pin, Nin, fill = max.change)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_wrap(scenario~., ncol = 2) +
scale_fill_viridis_d() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("max. change GPP"))
droop.max.QN <- sim.droop.metrics.QN %>%
ggplot(aes(Pin, Nin, fill = max.change)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_wrap(scenario~., ncol = 2) +
scale_fill_viridis_d() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("max. change GPP"))
droop.max.QN
```
droop.max.QN <- sim.droop.metrics.QN %>%
ggplot(aes(Pin, Nin, fill = max.change)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_wrap(scenario~., ncol = 2) +
scale_fill_viridis_d() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("max. change QN"))
droop.max.QN
```
droop.max.QP <- sim.droop.metrics.QP %>%
ggplot(aes(Pin, Nin, fill = max.change)) +
geom_raster() +
geom_abline(intercept = 0, slope = (16 * 14.007)/30.974,
lwd = 1, lty = "dashed", col = "white") +
facet_wrap(scenario~., ncol = 2) +
scale_fill_viridis_d() +
labs(x = expression("Inflow P ug L"^-1), y = expression("Inflow N ug L"^-1),
fill = expression("max. change QP"))
droop.max.QP
```
